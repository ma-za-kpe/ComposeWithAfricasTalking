plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.dagger.hilt.android")
}

android {
    namespace 'com.maku.composewithafricastalking'
    compileSdk 33

    defaultConfig {
        applicationId "com.maku.composewithafricastalking"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        freeCompilerArgs = [
                "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"
        ]
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // TODO: consider using the BOM here: https://developer.android.com/jetpack/compose/setup#kotlin_1
    def composeBom = platform("androidx.compose:compose-bom:2023.01.00")
    implementation(composeBom)

    // Android Studio Preview support
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")
    implementation("androidx.compose.ui:ui")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // JSON Parsing
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //http loggin interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:$logging_interceptor")

    // dagger
    implementation("com.google.dagger:hilt-android:2.44.2")
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    // Material Design 3
    implementation("androidx.compose.material3:material3")

    // integration with activities
    implementation("androidx.activity:activity-compose:1.7.0")

    // Add full set of material icons
    implementation("androidx.compose.material:material-icons-extended")

    // testing
    androidTestImplementation(composeBom)

    // core
    implementation "androidx.core:core-ktx:$core_ktx"

    // constraint layout
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraintlayout_compose"

    // Pager, system ui controller and Indicators - Accompanist
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // logging
    implementation "com.jakewharton.timber:timber:$timber"

    // life cycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"

    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}